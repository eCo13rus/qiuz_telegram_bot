<?php

namespace App\Services\Telegram\QuizService;

use App\Telegram\Commands\QuizCommand;
use App\Models\UserState;
use Telegram\Bot\FileUpload\InputFile;
use Telegram\Bot\Laravel\Facades\Telegram as TelegramFacade;
use App\Models\Question;
use App\Models\User;
use Illuminate\Support\Facades\Log;

class QuizService
{
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∑–∞–≥—Ä—É–∂–∞—è —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.
    public function getCurrentQuestionExplanation(int $currentQuestionId): ?string
    {
        $currentQuestion = Question::find($currentQuestionId);

        if (!empty($currentQuestion->explanation)) {
            return '<em>' . 'üî∏' . htmlspecialchars($currentQuestion->explanation) . '</em>';
        }
        return null;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∏ –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public function sendNextQuestion(User $user, int $currentQuestionId, int $chatId): bool
    {
        $questionIndex = Question::where('id', '<=', $currentQuestionId)->count() + 1; // –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞

        $nextQuestionId = Question::where('id', '>', $currentQuestionId)->min('id');

        $nextQuestionExists = Question::where('id', $nextQuestionId)->exists();

        if (!$nextQuestionExists) {
            return false; // –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç, –∑–∞–≤–µ—Ä—à–∞–µ–º –∫–≤–∏–∑
        }

        $nextQuestion = Question::with(['answers', 'pictures'])->find($nextQuestionId);
        if ($nextQuestion) {
            $text =  '<strong>' . '–í–û–ü–†–û–° #' . $questionIndex . PHP_EOL . PHP_EOL . $nextQuestion->text . '</strong>';
            $keyboard = QuizCommand::createQuestionKeyboard($nextQuestion);

            $this->sendQuestion($nextQuestion, $text, $keyboard, $chatId);

            UserState::updateOrCreate(
                ['user_id' => $user->id],
                ['state' => 'quiz_in_progress', 'current_question_id' => $nextQuestionId]
            );

            Log::info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å {$nextQuestionId} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {$user->id}");

            return true;
        }
        return false;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≤–æ–ø—Ä–æ—Å–æ–º.
    protected function sendQuestion(Question $question, string $text, array $keyboard, int $chatId): void
    {
        // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞.
        TelegramFacade::sendMessage([
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'HTML',
        ]);

        $allImagesHaveIds = true;
        $mediaGroup = collect();

        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        foreach ($question->pictures as $picture) {
            if (!$picture->telegram_file_id) {
                // –ü–æ–ª—É—á–∞–µ–º id –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –µ—Å–ª–∏ –Ω–∞–¥–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º .
                $this->fetchAndSaveTelegramFileId($picture, $chatId);
                $allImagesHaveIds = false; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.
            }
            if ($picture->telegram_file_id) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É, –µ—Å–ª–∏ —É –Ω–µ–≥–æ —É–∂–µ –µ—Å—Ç—å telegram_file_id.
                $mediaGroup->push([
                    'type' => 'photo',
                    'media' => $picture->telegram_file_id,
                ]);
            }
        }
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
        if ($mediaGroup->isNotEmpty()) {
            if ($allImagesHaveIds) {
                // –ï—Å–ª–∏ –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ Telegram –∏ –∏–º–µ—é—Ç ID
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
                TelegramFacade::sendMediaGroup([
                    'chat_id' => $chatId,
                    'media' => $mediaGroup->toJson(),
                ]);
            }
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
        TelegramFacade::sendMessage([
            'chat_id' => $chatId,
            'text' => '<em>' . '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:' . '</em>',
            'parse_mode' => 'HTML',
            'reply_markup' => json_encode(['inline_keyboard' => $keyboard], JSON_UNESCAPED_UNICODE),
        ]);
    }

    // –ï—Å–ª–∏ –≤ –±–∞–∑–µ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ –ø–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –ø–æ –ø—É—Ç–∏ –≥–¥–µ –æ–Ω–∏ –ª–µ–∂–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö telegram_file_id 
    protected function fetchAndSaveTelegramFileId($picture, $chatId)
    {
        $imagePath = storage_path('app/public/' . $picture->path);
        if (file_exists($imagePath)) {
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ Telegram –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è telegram_file_id.
                $response = TelegramFacade::sendPhoto([
                    'chat_id' => $chatId,
                    'photo' => InputFile::create($imagePath, basename($imagePath)),
                ]);

                if ($response && $response->getPhoto()) {
                    // –ü–æ–ª—É—á–∞–µ–º telegram_file_id –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –º–æ–¥–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
                    $photos = $response->getPhoto();
                    $telegramFileId = collect($photos)->last()->fileId;
                    $picture->telegram_file_id = $telegramFileId;
                    $picture->save();
                }
            } catch (\Exception $e) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
                Log::error("Exception while sending image: {$e->getMessage()}");
            }
        }
    }

    // –ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –∫–≤–∏–∑ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public function completeQuiz(User $user, int $chatId): void
    {
        TelegramFacade::sendMessage([
            'chat_id' => $chatId,
            'text' => '<strong>' . '–í–û–ü–†–û–° #7' . '

ü§© –ö–∞–∂–µ—Ç—Å—è –≤—ã —É–∂–µ –ø—Ä–æ–Ω–∏–∫–ª–∏—Å—å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏. –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ –¥–µ–ª–µ. –ü–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ —ç—Ç–æ–º <a href="https://neuro-texter.ru/">–ù–µ–π—Ä–æ–¢–µ–∫—Å—Ç–µ—Ä</a>. 

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±–∞–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∫–∞—Ç–∞–µ—Ç—Å—è –Ω–∞ —Å–∫–µ–π—Ç–±–æ—Ä–¥–µ –ø–æ –º–∞–≥–∞–∑–∏–Ω—É. 
                            
üñ• –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É <a href="https://neuro-texter.ru/">–ù–µ–π—Ä–æ–¢–µ–∫—Å—Ç–µ—Ä</a>
–ø—Ä–∏—à–ª—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è.
            ' . '</strong>',

            'parse_mode' => 'HTML',
        ]);

        UserState::updateOrCreate(
            ['user_id' => $user->id],
            ['state' => 'quiz_completed', 'current_question_id' => null]
        );

        Log::info("–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {$user->id}");
    }
}
